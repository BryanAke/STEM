/**
 * ## Grid
 *
 * Within sections (and articles) we use a standard
 * 12-column grid for overall layout, in a responsive,
 * mobile-first architecture.
 *
 * We're using flexbox for the grid since the page
 * layout is challenging for other grid approaches
 * (inline-block or floats). That does leave IE9
 * (and maybe IE10) behind.
 */


/**
 * Container:
 * The `container` class encapsulates all grid-based
 * content.
 *
 *     @example:
 *     <div class="container">
 *         Contents here, starting with rows
 *     </div>
 */

.container {
    box-sizing: border-box;
    margin-left: auto;
    margin-right: auto;
}

/*
 * The grid definitions are LESS mixins, not
 * direct classes. This avoids having to use
 * generic class names in the markup so the
 * HTML remains semantic.
 */

.row {
    align-items: stretch;
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.column {
    box-sizing: border-box;
    flex-basis: 100%;
    flex-grow: 1;
    flex-shrink: 1;
    max-width: 100%;
}

.zero-columns() {
    .column;
    flex-basis: 0;
}

.one-column() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 8.33333333333%; max-width: 8.33333333333%; }
}

.two-columns() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 16.6666666667%; max-width: 16.6666666667%; }
}

.three-columns() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 25%;            max-width: 25%;            }
}

.four-columns() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 33.3333333333%; max-width: 33.3333333333%; }
}

.five-columns() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 41.6666666667%; max-width: 41.6666666667%; }
}

.six-columns() {
    .column;
    @media @tablet  { flex-basis: 50%;            max-width: 50%;            }
    @media @desktop { flex-basis: 50%;            max-width: 50%;            }
}

.seven-columns() {
    .column;
    @media @desktop { flex-basis: 58.3333333333%; max-width: 58.3333333333%; }
}

.eight-columns() {
    .column;
    @media @desktop { flex-basis: 66.6666666667%; max-width: 66.6666666667%; }
}

.nine-columns() {
    .column;
    @media @desktop { flex-basis: 75%;            max-width: 75%;            }
}

.ten-columns() {
    .column;
    @media @desktop { flex-basis: 83.3333333333%; max-width: 83.3333333333%; }
}

.eleven-columns() {
    .column;
    @media @desktop { flex-basis: 91.6666666667%; max-width: 91.6666666667%; }
}

.twelve-columns() {
    .column;
}

.one-sixth-column()     { .two-columns; }
.one-fourth-column()    { .three-columns; }
.one-third-column()     { .four-columns; }
.one-half-column()      { .six-columns; }
.two-thirds-column()    { .eight-columns; }
.three-fourths-column() { .nine-columns; }
.five-sixths-column()   { .ten-columns; }
.one-full-column()      { .twelve-columns; }