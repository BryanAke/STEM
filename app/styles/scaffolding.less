/**
 * ## Scaffolding
 *
 * We use a straightforward semantic markup with the
 * three standard compononents of `<nav>`, `<main>`,
 * and `<footer>`.
 */


/**
 * ### `<section>`
 * Because the site is actually just a single page
 * application, there are multiple "apparent" pages
 * within the single HTML file. Each virtual page is
 * a single `<section>` within the `<main>` content.
 *
 * By default, all sections other than the first are
 * hidden by CSS. There's an exception, however, if
 * the user's browser does not support JavaScript.
 * In that case we display all the sections so the
 * user can at least scroll to see all of the static
 * content. To override the default behavior on any
 * particular section, add the class `hide` or `show`
 * or set the `data-hide` attribute to `"1"` or `"0"`
 * as appropriate. The `data-hide` attribute overrides
 * all class- and position-based hiding.
 *
 * > Note: We "hide" sections by positioning them
 * offscreen, not by setting their display property
 * to `none`. This keeps all sections accessible to
 * screen readers.
 *
 *     @example:
 *     <section class="show">
 *         This section is always visible.
 *     </section>
 *     <section class="hide">
 *         This section is never visible.
 *     </section>
 */

section {
    transition: opacity 400ms linear;
    width: 100%;
}

html.js section:not(:first-of-type),
html.js section.hide,
section.hide,
section[data-hide="1"] {
    .invisible;
}

html.js section.show,
section.show,
section[data-hide="0"],
html.js section:not(:first-of-type)[data-hide="0"],
html.js section.hide[data-hide="0"],
section.hide[data-hide="0"],
 {
    .visible;
}

